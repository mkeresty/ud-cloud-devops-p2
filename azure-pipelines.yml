trigger:
- main

pool: myPool

variables:
  appName: 'udp3'
  azureServiceConnectionId: 'myServiceConnection'
  environmentName: 'flask-ml-service'
  projectRoot: $(System.DefaultWorkingDirectory)
  repositoryName: 'ud-cloud-devops-p2'
  resourceGroup: 'Azuredevops'
  subscriptionId: 'a3a536c2-3690-4c5f-8032-998a8dc3234e'
  webAppName: 'udp3'
  vmName: 'myLinuxVM'
  vmUsername: 'azureuser'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myPool
    steps:    
    - script: |
        export PATH=$HOME/.local/bin:$PATH
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Setup and Lint'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: myPool
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : flask-ml-service'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              appType: webApp